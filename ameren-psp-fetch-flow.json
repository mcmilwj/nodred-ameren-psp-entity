[{"id":"555f32a9bacbfaa6","type":"tab","label":"PSP","disabled":false,"info":"Work towards getting hourly\nenergy price rates","env":[]},{"id":"e95d4773f7401efb","type":"debug","z":"555f32a9bacbfaa6","name":"debug 6","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":400,"y":420,"wires":[]},{"id":"74d6edbb1b69e608","type":"http request","z":"555f32a9bacbfaa6","name":"","method":"POST","ret":"obj","paytoqs":"body","url":"https://www.ameren.com/api/ameren/promotion/RtpHourlyPricesbyDate","tls":"","persist":false,"proxy":"","insecureHTTPParser":true,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"accept","valueType":"other","valueValue":"application/json"},{"keyType":"other","keyValue":"content-type","valueType":"other","valueValue":"application/json"}],"x":150,"y":420,"wires":[["e95d4773f7401efb","d1e96692c1d58586"]]},{"id":"affe557d7087a7d1","type":"inject","z":"555f32a9bacbfaa6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"str","x":110,"y":280,"wires":[["37bcfa660a5adc17"]]},{"id":"37bcfa660a5adc17","type":"function","z":"555f32a9bacbfaa6","name":"tomorrow_json_arg","func":"/*\nThis gets tomorrow's date and puts it into the JSON form\nthat Ameren expects for their API call to retrieve \nhourly kWh pricing.\n*/\nconst today = new Date().toISOString().split('T')[0];\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() - 1);  // fixme\nconst date = '' + tomorrow.toISOString().split('T')[0];\nmsg.payload = { \"SelectedDate\": date };\nreturn msg;\n// was {\"SelectedDate\":\"2022-09-13\"} in inject node","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":340,"wires":[["74d6edbb1b69e608"]]},{"id":"d1e96692c1d58586","type":"function","z":"555f32a9bacbfaa6","name":"pick_relevant_fields","func":"msg.payload = {\n    selectedDate: msg.payload.selectedDate,\n    hourlyPriceDetails: msg.payload.hourlyPriceDetails\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":500,"wires":[["9fce821b8a861478"]]},{"id":"be43366ee34c95e2","type":"debug","z":"555f32a9bacbfaa6","name":"debug 12","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":600,"wires":[]},{"id":"9fce821b8a861478","type":"function","z":"555f32a9bacbfaa6","name":"do_pricing_analysis","func":"const stats = {\n    lowest: -1, highest: -1, average: -1, accumPrice: 0 };\nfor(const item of msg.payload.hourlyPriceDetails) {\n    const hour = item.hour;\n    const price = item.price;\n    if(stats.lowest < 0) {\n        stats.lowest = stats.highest = stats.average = price;\n        stats.lowestHour = stats.highestHour = hour;\n        stats.countHours = 1;\n    }\n    else {\n        stats.countHours++;\n    }\n    if(stats.lowest > price) {\n        stats.lowest = price;\n        stats.lowestHour = hour;\n    }\n    if (stats.highest < price) {\n        stats.highest = price;\n        stats.highestHour = hour;\n    }\n    stats.accumPrice += price;\n}\nstats.average = stats.accumPrice / stats.countHours;\nmsg.payload.stats = stats;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":560,"wires":[["be43366ee34c95e2"]]}]
